<Modal @ref="modalRef">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Confirmation</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <span>Do you really want to remove the claim item? </span>
        </ModalBody>
        <ModalFooter>
            <button class="btn btn-primary" type="button" @onclick="@AfterConfirmClaimItem">
                <Icon Class="pr-1" Name="@(" fas fa-check")" />    Yes
            </button>

            <Button Color="Color.Secondary" Clicked="@CancelDeleteConfirmationModal">
                <Icon Class="pr-1" Name="@(" fas fa-times")" />   Cancel
            </Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    public Modal modalRef;

    [Parameter]
    public Int64 ClaimItemId { get; set; }

    [Parameter]
    public RenderFragment confirmDeleteClaimA { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> AfterConfirmClaimItem { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

    }

    public async Task ShowDeleteConfirmationModal(Int64 claimItemId)
    {
        ClaimItemId = claimItemId;
        modalRef.Show();
    }

    public async Task HideDeleteConfirmationModal()
    {
        ClaimItemId = 0;
        modalRef.Hide();
    }

    public async Task CancelDeleteConfirmationModal()
    {
        ClaimItemId = 0;
        modalRef.Hide();

    }
}