@page "/"
@page "/Index"
@using ClientWebAppBlazor.Services

@inject IJSRuntime JsRuntime
@inject ILocalStorageService _localStorage
@inject AuthenticationDataAccess _authenticationDataAccess
@inject NavigationManager NavigationManager

@code {

    public bool isUserAuthenticated { get; set; }
    JwtToken JwtToken = new JwtToken();
    protected override async Task OnInitializedAsync()
    {


        JwtToken = await this._authenticationDataAccess.GetLoggedInUserDetails();
        isUserAuthenticated = JwtToken.IsUserAuthenticated;

        string signedInSuccessfully = await _localStorage.GetItemAsync<string>("signedInSuccessfullyNew");

        if (!string.IsNullOrEmpty(signedInSuccessfully) && signedInSuccessfully == "true")
        {
            await JsRuntime.InvokeVoidAsync("homeController.signedInSuccessfully", "");
            await _localStorage.RemoveItemAsync("signedInSuccessfullyNew");
        }

    }

    async Task ValidateAuthentication()
    {
        // var isValidateAuthentication = await this._authenticationDataAccess.ValidateUserAuthentication();
    }

}

<NavBar JwtToken="@JwtToken" ActivateNav="navItemHome">
</NavBar>
<div class='container-fluid pt-2'>

    @if (isUserAuthenticated)
    {
        <Dashboard>

        </Dashboard>
    }



</div>
